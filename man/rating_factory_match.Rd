% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rating_factories.R
\name{rating_factory_match}
\alias{rating_factory_match}
\title{Create a Rating Function to "Match" Categorical Data}
\usage{
rating_factory_match(
  mapping,
  values = seq_along(mapping),
  unmatched_label = NA_character_
)
}
\arguments{
\item{mapping}{A named list. The names of the list elements will become the
levels of the output factor. Each element of the list should be a character
vector containing the input values to be mapped to that name.}

\item{values}{integer. A vector of values to represent each element of
mapping. The default \code{seq_along(mapping)} results in a distance of \code{1}
between each rating level.}

\item{unmatched_label}{The label to use for values in the input data that do
not match any of the categories in the \code{mapping} list. Default is \code{NA}.}
}
\value{
A new function that takes a single argument (a vector of data) and
returns a factor with levels ordered according to the \code{mapping} list.
}
\description{
This is a "function factory" that creates a new rating function based on a
mapping of input categories to desired output factor levels. I employs
similar logic to \code{dplyr::case_match()} within a rating function, but ensures
an ordered factor with informatie labels is returned.
}
\examples{
# Define a mapping for soil texture classes
texture_map <- list(
  "Coarse" = c("sand", "loamy sand", "sandy loam"),
  "Medium" = c("loam", "silt loam", "silt"),
  "Fine" = c("clay loam", "sandy clay loam", "silty clay loam", "clay")
)

# Create the rating function
rate_texture <- rating_factory_match(texture_map, values = c(2, 4, 10))

# Use the new function
soil_textures <- c("loam", "sand", "clay", "silt", "unknown")
res <- rate_texture(soil_textures)

res
str(res)
}
