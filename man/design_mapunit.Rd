% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/design_mapunit.R
\name{design_mapunit}
\alias{design_mapunit}
\title{Design a Map Unit}
\usage{
design_mapunit(
  x,
  mapping,
  idname = "id",
  component_labels = SOILmilaR::greekletters[[1]],
  ...
)
}
\arguments{
\item{x}{A data.frame or a SoilProfileCollection.}

\item{mapping}{A named list of rating functions.}

\item{idname}{The name of the ID column in \code{x}. Default: \code{"id"}.}

\item{component_labels}{A character vector of labels to assign to components.
Default: \code{greekletters[[1]]}}

\item{...}{Additional arguments passed on to \code{similar_soils()}, such as
\code{threshold_single} or \code{threshold_all}.}
}
\value{
A data.frame containing the original data along with a new 'compname'
column that assigns a map unit component label to each group of similar
soils.
}
\description{
This function calls \code{similar_soils()} iteratively to estimate the proportions
of observations corresponding to distinct groups of similar soils. Use it
exhaustively group all observations (for example, within a map unit or other
conceptual unit of interest)
}
\details{
This function automates the iterative process of calling
\code{similar_soils()} to build out an estimate of map unit composition.

As a special case, if \code{threshold_single} and \code{threshold_all} are set to
\code{0}, the function will use a more efficient method. It will directly group
all soils that share the exact same combination of rated properties, as
this is the logical outcome of a zero-distance threshold. The component
labels are assigned based on the size of the groups, with the largest group
being assigned the first label.
}
\examples{
\dontshow{if (requireNamespace("dplyr")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

data("loamy", package = "SOILmilaR")

rate_taxpartsize <- function(x) {
  dplyr::case_match(x,
                    c("sandy-skeletal") ~ 1,
                    c("sandy") ~ 3,
                    c("loamy", "coarse-loamy", "coarse-silty") ~ 5,
                    c("fine-loamy", "fine-silty") ~ 7,
                    c("clayey", "fine") ~ 9,
                    c("very-fine") ~ 11,
                    c("loamy-skeletal", "clayey-skeletal") ~ 13,
                    "fragmental" ~ 15)
}

rate_depthclass <- function(x,
                            breaks = c(
                              `very shallow` = 25,
                              `shallow` = 50,
                              `moderately deep` = 100,
                              `deep` = 150,
                              `very deep` = 1e4
                            ),
                            ...) {
  res <- cut(x, c(0, breaks))
  factor(res, levels = levels(res), labels = names(breaks))
}

m <- list(taxpartsize = rate_taxpartsize, depth = rate_depthclass)

mapunit_composition <- design_mapunit(loamy, m)

mapunit_composition[order(mapunit_composition$component), ]

sort(prop.table(table(mapunit_composition$component)), decreasing = TRUE)
\dontshow{\}) # examplesIf}
}
