[{"path":[]},{"path":"http://humus.rocks/SOILmilaR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"http://humus.rocks/SOILmilaR/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"http://humus.rocks/SOILmilaR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Brown. Maintainer.","code":""},{"path":"http://humus.rocks/SOILmilaR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brown (2024). SOILmilaR: Apply Similar Soils Contrasts. R package version 0.0.3, http://humus.rocks/SOILmilaR/, http://github.com/brownag/SOILmilaR.","code":"@Manual{,   title = {SOILmilaR: Apply Similar Soils Contrasts},   author = {Andrew Brown},   year = {2024},   note = {R package version 0.0.3, http://humus.rocks/SOILmilaR/},   url = {http://github.com/brownag/SOILmilaR}, }"},{"path":"http://humus.rocks/SOILmilaR/index.html","id":"soilmilar","dir":"","previous_headings":"","what":"Apply Similar Soils Contrasts","title":"Apply Similar Soils Contrasts","text":"goal {SOILmilaR} provide methods applying standardized, customizable “similar soils” rules site-level data derived various sources. main method package implement method similar_soils(). follows process outlined Norfleet & Eppinette (1993): Norfleet, M.L. Eppinette, R.T. (1993), Mathematical Model Determining Similar Contrasting Inclusions Map Unit Descriptons. Soil Survey Horizons, 34: 4-5. https://doi.org/10.2136/sh1993.1.0004","code":""},{"path":"http://humus.rocks/SOILmilaR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Apply Similar Soils Contrasts","text":"can install development version SOILmilaR GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"brownag/SOILmilaR\")"},{"path":"http://humus.rocks/SOILmilaR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Apply Similar Soils Contrasts","text":"basic example shows solve common problem:","code":"library(SOILmilaR) set.seed(456)  x <- do.call('rbind', lapply(1:3, \\(i) data.frame(id = paste0(LETTERS[1:10], i),   taxpartsize = c(\"fine-loamy\", \"loamy\", \"fine-loamy\", \"fine-loamy\",                   \"coarse-loamy\", \"coarse-loamy\", \"coarse-loamy\", \"loamy-skeletal\",                   \"loamy-skeletal\", \"loamy-skeletal\"),   depth = runif(10, 35, 150),   pscs_clay = c(runif(4, 18, 35), runif(6, 14, 18)),   pscs_frags = c(runif(3, 0, 15), runif(4, 10, 34),                  runif(3, 35, 60) + c(0, 40, 0)))))  rate_taxpartsize <- function(x) {   # TODO: this is just made up logic for this example and needs to be updated   dplyr::case_match(x,                     c(\"sandy-skeletal\") ~ 1,                     c(\"sandy\") ~ 2,                     c(\"loamy\", \"coarse-loamy\", \"coarse-silty\") ~ 3,                     c(\"fine-loamy\", \"fine-silty\") ~ 4,                     c(\"clayey\", \"fine\") ~ 5,                     c(\"very-fine\") ~ 6,                     c(\"loamy-skeletal\", \"clayey-skeletal\") ~ 7) }  rate_depthclass <- function(x,                             breaks = c(                               `very shallow` = 25,                               `shallow` = 50,                               `moderately deep` = 100,                               `deep` = 150,                               `very deep` = 1e4                             ),                             ...) {   res <- cut(x, c(0, breaks))   factor(res, levels = levels(res), labels = names(breaks), ordered = TRUE) }  rate_pscs_clay <- function(x, breaks = c(18, 27, 40, 60, 100)) {   res <- cut(x, c(0, breaks))   factor(res, levels = levels(res), ordered = TRUE) }  m <- list(taxpartsize = rate_taxpartsize,           depth = rate_depthclass,           pscs_clay = rate_pscs_clay)  s <- similar_soils(x, m) #> comparing to dominant reference condition (`7.3.1` on 6 rows) head(s) #>   id taxpartsize depth pscs_clay similar_dist similar #> 1 A1           4     2         2            5   FALSE #> 2 B1           3     3         2            5   FALSE #> 3 C1           4     4         3            6   FALSE #> 4 D1           4     4         3            6   FALSE #> 5 E1           3     4         1            5   FALSE #> 6 F1           3     3         1            4   FALSE  # inspect distances using agglomerative clustering+dendrogram d <- cluster::agnes(s[, 5, drop = FALSE], method = \"gaverage\") d$height <- d$height + 0.2 # fudge factor for 0-distance plot(stats::as.dendrogram(d), center = TRUE, type = \"triangle\") # allow relative contrast ratings to be negative # (i.e. ordinal factors, concept of \"limiting\") # absolute value is still used for \"similar\" threshold s2 <- similar_soils(x, m, absolute = FALSE) #> comparing to dominant reference condition (`7.3.1` on 6 rows)  # inspect distances unsing agglomerative clustering+dendrogram d2 <- cluster::agnes(s2[, 5, drop = FALSE], method = \"gaverage\") d2$height <- d2$height + 0.2 # fudge factor for 0-distance  plot(stats::as.dendrogram(d2), center = TRUE, type = \"triangle\")"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanBootCustom.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval for the mean of binomial proportions using bootstrapping — BinomCIMeanBootCustom","title":"Calculate confidence interval for the mean of binomial proportions using bootstrapping — BinomCIMeanBootCustom","text":"method accounts unique confidence intervals experiment sampling confidence intervals bootstrapping. Upper lower confidence interval boundaries determined using quantiles (corresponding specified level alpha) bootstrapped estimates.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanBootCustom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval for the mean of binomial proportions using bootstrapping — BinomCIMeanBootCustom","text":"","code":"BinomCIMeanBootCustom(x, n, alpha = 0.05, B = 1000)"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanBootCustom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval for the mean of binomial proportions using bootstrapping — BinomCIMeanBootCustom","text":"x matrix numeric. First column matrix, numeric vector, represent estimated binomial proportion experiment. n integer. Number trials per experiment. length(n) match number estimated binomial proportions repeated. alpha numeric. Probability level Z-value normal distribution confidence interval calculation. B integer. Number bootstrap replicates use. Default: 1000","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanBootCustom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval for the mean of binomial proportions using bootstrapping — BinomCIMeanBootCustom","text":"matrix containing columns \"est\", \"lwr.ci\", \"upr.ci\"","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanBootCustom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate confidence interval for the mean of binomial proportions using bootstrapping — BinomCIMeanBootCustom","text":"","code":"library(DescTools)  # example: 3 binomial experiments, 10 trials, confidence level 0.8 x <- DescTools::BinomCI(c(5,6,7), 10, 0.8)  # Inspect input x #>     est    lwr.ci    upr.ci #> x.1 0.5 0.3122044 0.6877956 #> x.2 0.6 0.4013518 0.7704344 #> x.3 0.7 0.4973717 0.8462008  # Calculate mean binomial probability and CI using bootstrapping # NOTE: the estimated CI from BinomCI() are considered in this method BinomCIMeanBootCustom(x, 10, B = 100) #>            est  lwr.ci upr.ci #> [1,] 0.5986667 0.43475 0.7606  # Compare to normal approximation BinomCIMeanNorm(x, 10) #>      est    lwr.ci    upr.ci #> [1,] 0.6 0.4399696 0.7600304  # Compare to straight arithmetic average of experiments colMeans(x) #>       est    lwr.ci    upr.ci  #> 0.6000000 0.4036427 0.7681436"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanNorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval for the mean of binomial proportions — BinomCIMeanNorm","title":"Calculate confidence interval for the mean of binomial proportions — BinomCIMeanNorm","text":"method account estimated confidence intervals unique experiment, uses normal approximation build confidence intervals. suitable cases Central Limit Theorem holds (.e. 30+ experiments).","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanNorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval for the mean of binomial proportions — BinomCIMeanNorm","text":"","code":"BinomCIMeanNorm(x, n, alpha = 0.05)"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanNorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval for the mean of binomial proportions — BinomCIMeanNorm","text":"x matrix numeric. First column matrix, numeric vector, represent estimated binomial proportion experiment. n integer. Number trials per experiment. length(n) match number estimated binomial proportions repeated. alpha numeric. Probability level Z-value normal distribution confidence interval calculation.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanNorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval for the mean of binomial proportions — BinomCIMeanNorm","text":"matrix containing columns \"est\", \"lwr.ci\", \"upr.ci\"","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanNorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate confidence interval for the mean of binomial proportions — BinomCIMeanNorm","text":"","code":"library(DescTools)  # example: 3 binomial experiments, 10 trials, confidence level 0.8 x <- DescTools::BinomCI(c(5,6,7), 10, 0.8)  # Inspect input x #>     est    lwr.ci    upr.ci #> x.1 0.5 0.3122044 0.6877956 #> x.2 0.6 0.4013518 0.7704344 #> x.3 0.7 0.4973717 0.8462008  # Calculate mean binomial probability and CI using normal approximation # NOTE: the estimated CI from BinomCI() are _not_ considered in this method BinomCIMeanNorm(x, 10) #>      est    lwr.ci    upr.ci #> [1,] 0.6 0.4399696 0.7600304  # compare to straight arithmetic average colMeans(x) #>       est    lwr.ci    upr.ci  #> 0.6000000 0.4036427 0.7681436"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolCustom.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolCustom","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolCustom","text":"method accounts unique confidence intervals experiment calculating pooled variance adjusted confidence interval around binomial probability. use bootstrapping rely large number trials per experiment (though, number trials small; .e n least 5, ideally larger) necessarily rely many repetitions experiment final mean binomial probability calculated using t-distribution number degrees freedom corresponding effective sample size. effective sample size used calculate standard error pooled variance across experiments construct final confidence interval.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolCustom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolCustom","text":"","code":"BinomCIMeanPoolCustom(x, n, alpha = 0.2)"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolCustom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolCustom","text":"x matrix numeric. First column matrix, numeric vector, represent estimated binomial proportion experiment. n integer. Number trials per experiment. length(n) match number estimated binomial proportions repeated. alpha numeric. Probability level Z-value normal distribution confidence interval calculation.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolCustom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolCustom","text":"matrix containing columns \"est\", \"lwr.ci\", \"upr.ci\"","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolCustom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolCustom","text":"","code":"library(DescTools)  # example: 3 binomial experiments, 10 trials, confidence level 0.8 x <- DescTools::BinomCI(c(5,6,7), 10, 0.8)  # Inspect input x #>     est    lwr.ci    upr.ci #> x.1 0.5 0.3122044 0.6877956 #> x.2 0.6 0.4013518 0.7704344 #> x.3 0.7 0.4973717 0.8462008  # Calculate confidence interval for mean binomial probability # NOTE: accounting for custom CI in pooled variance BinomCIMeanPoolCustom(x, 10) #>      est    lwr.ci    upr.ci #> [1,] 0.6 0.3811151 0.8188849  # Compare to t-distribution BinomCIMeanPoolNorm(x, 10) #>      est    lwr.ci    upr.ci #> [1,] 0.6 0.3788071 0.8211929  # Compare to arithmetic average colMeans(x) #>       est    lwr.ci    upr.ci  #> 0.6000000 0.4036427 0.7681436"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolNorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolNorm","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolNorm","text":"method estimates confidence intervals unique experiment using normal approximation. suitable number trials experiment large enough Central Limit Theorem holds (.e. 30+ trials per experiment). necessarily rely many repetitions experiment final mean binomial probability calculated using t-distribution number degrees freedom corresponding effective sample size. effective sample size used calculate standard error pooled variance across experiments construct final confidence interval.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolNorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolNorm","text":"","code":"BinomCIMeanPoolNorm(x, n, alpha = 0.05)"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolNorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolNorm","text":"x matrix numeric. First column matrix, numeric vector, represent estimated binomial proportion experiment. n integer. Number trials per experiment. length(n) match number estimated binomial proportions repeated. alpha numeric. Probability level Z-value normal distribution confidence interval calculation.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolNorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolNorm","text":"matrix containing columns \"est\", \"lwr.ci\", \"upr.ci\"","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomCIMeanPoolNorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate confidence interval for the mean of binomial probabilities using pooled variance — BinomCIMeanPoolNorm","text":"","code":"library(DescTools)  # example: 3 binomial experiments, 10 trials, confidence level 0.8 x <- DescTools::BinomCI(c(5,6,7), 10, 0.8)  # Inspect input x #>     est    lwr.ci    upr.ci #> x.1 0.5 0.3122044 0.6877956 #> x.2 0.6 0.4013518 0.7704344 #> x.3 0.7 0.4973717 0.8462008  BinomCIMeanPoolNorm(x, 10) #>      est    lwr.ci    upr.ci #> [1,] 0.6 0.3788071 0.8211929  # Compare to arithmetic average colMeans(x) #>       est    lwr.ci    upr.ci  #> 0.6000000 0.4036427 0.7681436"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarCustom.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pooled variance for related binomial experiments with given confidence intervals — BinomVarCustom","title":"Calculate pooled variance for related binomial experiments with given confidence intervals — BinomVarCustom","text":"method calculates pooled variance related binomial experiments confidence intervals. Instead relying normal approximation, user can calculate estimate confidence intervals. method adjusts calculated binomial variance account arbitrary given confidence interval, calculates pooled variance across experiments.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarCustom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pooled variance for related binomial experiments with given confidence intervals — BinomVarCustom","text":"","code":"BinomVarCustom(n, p_values, ci_intervals)"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarCustom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pooled variance for related binomial experiments with given confidence intervals — BinomVarCustom","text":"n integer. Number trials per experiment p_values numeric. Probability success experiment. ci_intervals list numeric vectors. list length equal length p_values. element list contains numeric vector length 2 denoting lower upper confidence limits.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarCustom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate pooled variance for related binomial experiments with given confidence intervals — BinomVarCustom","text":"","code":"n <- 10  # Number of trials for each experiment  p_values <- c(0.2, 0.3, 0.4) # Probability of success for each experiment  # Wilson score intervals for each p wilson_intervals <- list(   c(0.1, 0.3),   c(0.2, 0.4),   c(0.3, 0.5) )  # Calculate pooled variance with custom confidence intervals BinomVarCustom(n, p_values, wilson_intervals) #> [1] NA"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarNorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pooled variance for related binomial experiments with confidence intervals — BinomVarNorm","title":"Calculate pooled variance for related binomial experiments with confidence intervals — BinomVarNorm","text":"method calculates pooled variance related binomial experiments confidence intervals. relies normal approximation / Central Limit Theorem develop confidence interval binomial probability vector p_values. order assumption work well, n large. method adjusts calculated binomial variance account normal approximation confidence interval, calculates pooled variance across experiments.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarNorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pooled variance for related binomial experiments with confidence intervals — BinomVarNorm","text":"","code":"BinomVarNorm(n, p_values, alpha = 0.05)"},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarNorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pooled variance for related binomial experiments with confidence intervals — BinomVarNorm","text":"n integer. Number trials per experiment. p_values numeric. Probability success experiment. alpha numeric. Probability level Z-value normal distribution confidence interval calculation.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/BinomVarNorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate pooled variance for related binomial experiments with confidence intervals — BinomVarNorm","text":"","code":"n <- c(10, 5, 30) p_values <- c(0.2, 0.3, 0.4) alpha <- 0.05  BinomVarNorm(n, p_values, alpha) #> [1] 12.04754"},{"path":"http://humus.rocks/SOILmilaR/reference/SOILmilaR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SOILmilaR: Apply Similar Soils Contrasts — SOILmilaR-package","title":"SOILmilaR: Apply Similar Soils Contrasts — SOILmilaR-package","text":"Provides methods applying standardized, customizable \"similar soils\" rules site-level data derived various sources.","code":""},{"path":[]},{"path":"http://humus.rocks/SOILmilaR/reference/greekletters.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of Greek Letters in upper and lowercase, and ASCII equivalent — greekletters","title":"Table of Greek Letters in upper and lowercase, and ASCII equivalent — greekletters","text":"data.frame containing name, upper case, lowercase (unicode) characters, along ASCII equivalents.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/greekletters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of Greek Letters in upper and lowercase, and ASCII equivalent — greekletters","text":"","code":"data(greekletters)"},{"path":"http://humus.rocks/SOILmilaR/reference/greekletters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Table of Greek Letters in upper and lowercase, and ASCII equivalent — greekletters","text":"object class data.frame 24 rows 4 columns.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/pscs_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Particle Size Control Section Weighted Average — pscs_weighted","title":"Calculate Particle Size Control Section Weighted Average — pscs_weighted","text":"Calculates particle size control section weighted average one variables (vars), using upper lower boundary specified pscsbounds. Profiles truncated interval set bounds, weighted averages calculated column. result number rows number sites input SoilProfileCollection x suitable joining back site table","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/pscs_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Particle Size Control Section Weighted Average — pscs_weighted","text":"","code":"pscs_weighted(   x,   vars,   na.rm = FALSE,   pscsbounds = c(\"psctopdepth\", \"pscbotdepth\"),   prefix = \"pscs_\" )"},{"path":"http://humus.rocks/SOILmilaR/reference/pscs_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Particle Size Control Section Weighted Average — pscs_weighted","text":"x SoilProfileCollection vars character. Column names numeric variables horizon table x summarize. na.rm logical. Remove NA? Default: FALSE pscsbounds character length 2. Column names numeric variables site table representing profile specific upper lower boundary. Default: \"psctopdepth\" \"pscbotdepth\" prefix character. Prefix append column name, create unique name conflict existing horizon data. Default: \"pscs_\"","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/pscs_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Particle Size Control Section Weighted Average — pscs_weighted","text":"data.frame-like object corresponding aqp_df_class(x)","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/pscs_weighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Particle Size Control Section Weighted Average — pscs_weighted","text":"","code":"# load aqp, and data from soilDB library(aqp) #> This is aqp 2.0.3 data(loafercreek, package = \"soilDB\")  # calculate PSCS weighted clay % and total fragment volume pscs_cf <- pscs_weighted(loafercreek, c(\"clay\", \"fragvoltot\"))  # inspect pscs_cf #>      peiid pscs_clay pscs_fragvoltot #> 1   115595  28.76471        0.000000 #> 2   115819  28.76471        0.000000 #> 3   115827  25.88000        0.000000 #> 4   207242  16.00000       16.770270 #> 5   207255  37.32000       21.440000 #> 6   268820  32.63415       13.853659 #> 7   307957  33.78571        1.285714 #> 8   307961  29.57576        7.727273 #> 9   307963  29.00000        8.000000 #> 10  338021  23.02632       30.789474 #> 11  338022  25.28000       19.400000 #> 12  338023  23.36364       37.454545 #> 13  338024  26.25000       11.666667 #> 14  338025  34.12000       34.460000 #> 15  338026  47.69565       13.695652 #> 16  338027  30.73171       23.780488 #> 17  338028  28.32609       25.543478 #> 18  338029  32.00000       10.714286 #> 19  338040  27.12500       26.250000 #> 20  338041  27.76316       22.894737 #> 21  338042  25.00000       14.777778 #> 22  338043  28.60870        5.000000 #> 23  338044  23.39535       27.093023 #> 24  338045  22.32000        5.000000 #> 25  338046  24.10000       26.140000 #> 26  342445  20.91600       29.000000 #> 27  346008  22.52000       29.000000 #> 28  351695  20.48780       31.390244 #> 29  351700  44.38000       25.180000 #> 30  351701  37.88000       11.500000 #> 31  351703  28.70000        7.500000 #> 32  351716  28.80000       54.420000 #> 33  351717  36.46000        4.700000 #> 34  374201  23.78000       44.140000 #> 35  374205  30.72000       17.360000 #> 36  374216  24.33333       35.733333 #> 37  374219  23.76000        6.640000 #> 38  374232  21.78000       12.440000 #> 39  414895  28.72727        9.772727 #> 40  414934  20.83871       15.258065 #> 41  414936  19.56000       32.460000 #> 42  414938  25.48000       23.000000 #> 43  425293  28.92000       16.900000 #> 44  463690  33.95122       35.243902 #> 45  477042  20.18000        5.680000 #> 46  477055  18.86486       48.135135 #> 47  477056  18.12500       69.270833 #> 48  477057  25.56000       20.000000 #> 49  477059  17.34000       23.980000 #> 50  488565  25.84000       31.360000 #> 51  488568  19.00000        5.000000 #> 52  488573  28.37500       30.000000 #> 53  488578  27.10870       50.543478 #> 54  488581  24.72000       24.200000 #> 55  488582  26.20370       55.000000 #> 56  488587  25.13514       52.027027 #> 57  488596  26.00000       50.000000 #> 58  488602  24.38000       43.900000 #> 59  488636  24.20000       16.720000 #> 60  493742  26.24000       23.560000 #> 61  530603  27.44444        0.000000 #> 62  530611  29.90000        5.000000 #> 63  530649        NA        0.880000 #> 64  530692  42.08000       16.100000 #> 65  530693  28.34000       10.000000 #> 66  530694  29.36842       31.052632 #> 67  530699  23.10000        8.500000 #> 68  530731  24.56818       15.000000 #> 69  530740  29.10000       15.000000 #> 70  530744  24.16000        7.200000 #> 71  530751  28.82000       17.200000 #> 72  533172        NA        0.000000 #> 73  533272  18.77500       17.000000 #> 74  533337        NA        0.000000 #> 75  533462  45.82917       23.791667 #> 76  533888  25.25161        5.967742 #> 77  533889        NA       15.000000 #> 78  542093  20.50000       20.000000 #> 79  542095  21.28889       34.000000 #> 80  542125  24.86000        9.280000 #> 81  542129  32.34000        0.000000 #> 82  542130  33.36585       25.804878 #> 83  542131  31.04000       13.560000 #> 84  542153  23.05405       36.108108 #> 85  542154  17.22000        0.000000 #> 86  620521  26.52000       28.300000 #> 87  620522  29.22000       16.820000 #> 88  620523  20.00000       39.642857 #> 89  625813  24.60000       51.620000 #> 90  625821  19.74000       28.620000 #> 91  640607  18.25000       19.375000 #> 92  640610  20.70000        5.900000 #> 93  640616  31.84000        2.000000 #> 94  640625  21.97959        4.387755 #> 95  640629  32.44737       29.078947 #> 96  640630  29.56000       24.400000 #> 97   64505  22.09412        0.000000 #> 98  839192  21.34000       14.900000 #> 99  839203  27.46154        5.538462 #> 100 894094  26.68000        0.000000 #> 101 894095  20.10526        7.105263 #> 102 894118  31.00000        5.000000 #> 103 894145  22.65000       27.750000  # left join to site table of loafercreek site(loafercreek) <- pscs_cf"},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":null,"dir":"Reference","previous_headings":"","what":"Similar Soil Contrasts — similar_soils","title":"Similar Soil Contrasts — similar_soils","text":"method applying standardized, customizable \"similar soils\" rules site-level data derived various sources.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similar Soil Contrasts — similar_soils","text":"","code":"similar_soils(   x,   mapping,   condition = NULL,   idname = \"id\",   thresh = 1L,   absolute = TRUE,   verbose = TRUE )"},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similar Soil Contrasts — similar_soils","text":"x data.frame SoilProfileCollection mapping named list functions. List element names refer site-level data columns x. specified function provides conversion data element x value used \"similar soils\" calculation. condition integer character. Default: NULL value calculated internally based dominant condition intersection mapping results x. may specify integer row ID x specific similar soil contrasts, can specify character dominant condition equivalent name assigned interaction() e.g. \"4.3\" two rating mapping result first rating value 4 second value 3 idname ID column name, default \"id\" thresh Sum differences relative dominant condition x. Default 1. See details discussion default calculation similarity. absolute logical. Report absolute difference? Default: TRUE. Absolute difference always used comparison thresh. verbose Default: TRUE message selected condition","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similar Soil Contrasts — similar_soils","text":"data.frame containing inputs two new columns: similar_dist (cumulative sum differences relative dominant condition), similar (logical)","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Similar Soil Contrasts — similar_soils","text":"sum differences across conditions (specified intersection output functions mapping) used \"distance\" soil relative dominant (otherwise specified) condition. threshold value used decide \"similar\" . functions mapping can customized use alternate thresholds.","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Similar Soil Contrasts — similar_soils","text":"Norfleet, M.L. Eppinette, R.T. (1993), Mathematical Model Determining Similar Contrasting Inclusions Map Unit Descriptons. Soil Survey Horizons, 34: 4-5. https://doi.org/10.2136/sh1993.1.0004","code":""},{"path":"http://humus.rocks/SOILmilaR/reference/similar_soils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similar Soil Contrasts — similar_soils","text":"","code":"set.seed(456)  x <- do.call('rbind', lapply(1:3, \\(i) data.frame(id = paste0(LETTERS[1:10], i),   taxpartsize = c(\"fine-loamy\", \"loamy\", \"fine-loamy\", \"fine-loamy\",                   \"coarse-loamy\", \"coarse-loamy\", \"coarse-loamy\", \"loamy-skeletal\",                   \"loamy-skeletal\", \"loamy-skeletal\"),   depth = runif(10, 35, 150),   pscs_clay = c(runif(4, 18, 35), runif(6, 14, 18)),   pscs_frags = c(runif(3, 0, 15), runif(4, 10, 34),                  runif(3, 35, 60) + c(0, 40, 0)))))  rate_taxpartsize <- function(x) {   # TODO: this is just made up logic for this example and needs to be updated   dplyr::case_match(x,                     c(\"sandy-skeletal\") ~ 1,                     c(\"sandy\") ~ 2,                     c(\"loamy\", \"coarse-loamy\", \"coarse-silty\") ~ 3,                     c(\"fine-loamy\", \"fine-silty\") ~ 4,                     c(\"clayey\", \"fine\") ~ 5,                     c(\"very-fine\") ~ 6,                     c(\"loamy-skeletal\", \"clayey-skeletal\") ~ 7) }  rate_depthclass <- function(x,                             breaks = c(                               `very shallow` = 25,                               `shallow` = 50,                               `moderately deep` = 100,                               `deep` = 150,                               `very deep` = 1e4                             ),                             pattern = \"R|Cr|Cd|kk|m\",                             hzdesgn = aqp::guessHzDesgnName(x, required = TRUE),                             ...) {   res <- cut(x, c(0, breaks))   factor(res, levels = levels(res), labels = names(breaks), ordered = TRUE) }  rate_pscs_clay <- function(x,                            breaks = c(18, 27, 40, 60, 100)) {   res <- cut(x, c(0, breaks))   factor(res, levels = levels(res), ordered = TRUE) }  m <- list(taxpartsize = rate_taxpartsize,           depth = rate_depthclass,           pscs_clay = rate_pscs_clay)  s <- similar_soils(x, m) #> comparing to dominant reference condition (`7.3.1` on 6 rows) head(s) #>   id taxpartsize depth pscs_clay similar_dist similar #> 1 A1           4     2         2            5   FALSE #> 2 B1           3     3         2            5   FALSE #> 3 C1           4     4         3            6   FALSE #> 4 D1           4     4         3            6   FALSE #> 5 E1           3     4         1            5   FALSE #> 6 F1           3     3         1            4   FALSE  # inspect distances using agglomerative clustering+dendrogram d <- cluster::agnes(s[, 5, drop = FALSE], method=\"gaverage\") d$height <- d$height + 0.2 # fudge factor for 0-distance plot(stats::as.dendrogram(d), center=TRUE, type=\"triangle\")   # allow relative contrast ratings to be negative # (i.e. ordinal factors, concept of \"limiting\") # absolute value is still used for \"similar\" threshold s2 <- similar_soils(x, m, absolute=FALSE) #> comparing to dominant reference condition (`7.3.1` on 6 rows)  # inspect distances unsing agglomerative clustering+dendrogram d2 <- cluster::agnes(s2[, 5, drop = FALSE], method=\"gaverage\") d2$height <- d2$height + 0.2 # fudge factor for 0-distance plot(stats::as.dendrogram(d2), center=TRUE, type=\"triangle\")"}]
